# A helper script to activate copy mode
[gcode_macro ACTIVATE_COPY_MODE]
gcode:
    G90
    G1 Z+10
    {% set xoffsetpos = printer["gcode_macro LNLOS"].copy_mode_xoffset|float|default(150) %}
    RESPOND TYPE=echo MSG="ACTIVATING COPY MODE"
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X{xoffsetpos}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    _IDEX_MODE MODE=1

# A helper script to activate mirror mode
[gcode_macro ACTIVATE_MIRROR_MODE]
gcode:
    G90
    G1 Z+10
    {% set xoffsetpos = printer["gcode_macro LNLOS"].mirror_mode_xoffset|float|default(300) %}
    RESPOND TYPE=echo MSG="ACTIVATING MIRROR MODE"   
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X{xoffsetpos}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    _IDEX_MODE MODE=2
    
[gcode_macro ACTIVATE_DUAL_MATERIAL_MODE]
gcode: 
    RESPOND TYPE=echo MSG="ACTIVATING DUAL MATERIAL MODE" 
    G28
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    _IDEX_MODE MODE=0

#here, 0 indicates dual material print mode, 1 = copy, 2 = mirror
[gcode_macro _IDEX_MODE]
variable_idex_mode: 0
gcode:
  {% set idex_mode = params.MODE|int|default(0) %}
  SET_GCODE_VARIABLE MACRO=_IDEX_MODE VARIABLE=idex_mode VALUE={idex_mode}
  _IDX
  
    
[gcode_macro _IDX]
gcode:
  {% if printer["gcode_macro _IDEX_MODE"].idex_mode == 0 %}
    RESPOND TYPE=echo MSG="IDEX MODE SET - Dual Material"
  {% elif printer["gcode_macro _IDEX_MODE"].idex_mode == 1 %}
    RESPOND TYPE=echo MSG="IDEX MODE SET - COPY"
  {% elif printer["gcode_macro _IDEX_MODE"].idex_mode == 2 %}
    RESPOND TYPE=echo MSG="IDEX MODE SET - MIRROR"
  {% else %}
    RESPOND TYPE=echo MSG="INVALID IDEX MODE, reverting to dual material mode"
    _IDEX_MODE MODE=0
  {% endif %}

[gcode_macro _RESTORE_IDEX_MODE]
gcode:
    #RESPOND TYPE=error MSG="RESTORING IDEX MODE" 
    {% set PRINT_MODE = printer["gcode_macro _IDEX_MODE"].idex_mode %}
    {% if PRINT_MODE == 0 %}
      ACTIVATE_DUAL_MATERIAL_MODE
    {% elif PRINT_MODE == 1 %}
      #RESPOND TYPE=error MSG="RESTORING COPY MODE" 
      ACTIVATE_COPY_MODE
    {% elif PRINT_MODE == 2 %}
      #RESPOND TYPE=error MSG="RESTORING MIRROR MODE" 
      ACTIVATE_MIRROR_MODE
    {% endif %}

### ------------------------------ ###
# Activate the primary extruder
# Activate the primary extruder
[gcode_macro T0]
description: Activates E1 and clears gcode offsets for idex
# set up to ignore T0 and T1 if unit is actively in mirror or copy mode
gcode:
    {% if printer["gcode_macro _IDEX_MODE"].idex_mode == 0 %}
    	RESPOND MSG="Selecting first extruder (T0)"
    	HOME_IF_NOT
    	{% if printer.toolhead.extruder != "extruder" %}
    	    PARK_{printer.toolhead.extruder}
    	{% endif %}
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        SET_DUAL_CARRIAGE CARRIAGE=0
        #CLEAR_GCODE_OFFSETS
    	# run the range setting only once, in order not to mis-set it after T1 target temp is set to zero
    	{% if  printer["gcode_macro _initial_t0"].range_set  == 0  %}
    		RESPOND TYPE=echo MSG="Lefttmost extruder X-direction movement range not yet set, setting it now"
    		_initial_t0
    	{% endif %}   	
    {% else %}
    RESPOND TYPE=echo MSG="Unit Currently in Mirror or Copy mode, ignoring T0"
    {% endif %}

[gcode_macro _initial_t0]
variable_range_set: 0
gcode:
  SET_GCODE_OFFSET X=1.5
  SET_GCODE_VARIABLE MACRO=_initial_t0 VARIABLE=range_set VALUE=1

[gcode_macro _clear_initial_t0]
gcode:
  SET_GCODE_VARIABLE MACRO=_initial_t0 VARIABLE=range_set VALUE=0

[gcode_macro _clear_xy_offsets]
gcode:
  SET_GCODE_OFFSET X=0 Y=0  
### ------------------------------ ###
# activate secondary toolhead
[gcode_macro T1]
description: Activates E2 and applies gcode offset for idex
gcode:
    {% if printer["gcode_macro _IDEX_MODE"].idex_mode == 0 %}
    {% set idex_x = printer["gcode_macro LNLOS"].idex_x_offset|float %}
    {% set idex_y = printer["gcode_macro LNLOS"].idex_y_offset|float %}
    RESPOND MSG="Selecting second extruder (T1)"
     HOME_IF_NOT
       {% if printer.toolhead.extruder != "extruder1" %}
         PARK_{printer.toolhead.extruder}
       {% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1

      #The X/Y offsets are opposite from the stock firmware method.
      #If the E2 prints too far to the left, you must ADD to the X offset.
      #If the E2 prints too far downwards, you must ADD to the Y offset.
      #The Z offset usually isn't needed. Just calibrate the physical Z adjustment on E2.
      {% set PRINT_MODE = printer["gcode_macro _IDEX_MODE"].idex_mode %}
      {% if PRINT_MODE == 0 %}
        SET_GCODE_OFFSET X={idex_x} Y={idex_y} #Z={idex_z} #x was 3.8
      {% endif %}
    {% else %}
      RESPOND TYPE=echo MSG="Unit Currently in Mirror or Copy mode, ignoring T0"
    {% endif %}


[gcode_macro CLEAR_GCODE_OFFSETS]
gcode:
    SET_GCODE_OFFSET X=0 Y=0 Z=0

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
	RESPOND MSG="Parking the leftmost extruder (E1)"
	#make sure we move the first carriage
	SET_DUAL_CARRIAGE CARRIAGE=0
	{% if not "x" in printer.toolhead.homed_axes %}
	    RESPOND MSG="Homing X"
	    G28 X
	{% endif %}

    SAVE_GCODE_STATE NAME=park0
    G90
	SET_GCODE_OFFSET X=0 Y=0 #Z=0
    G1 X{printer.configfile.settings.stepper_x.position_min} F12000
    RESTORE_GCODE_STATE NAME=park0

[gcode_macro PARK_extruder1]
gcode:
	RESPOND MSG="Parking the rightmost extruder (E2)"
	#make sure we move the second carriage. After all, we do not know which carriage is active
	SET_DUAL_CARRIAGE CARRIAGE=1
	{% if not "x" in printer.toolhead.homed_axes %}
	    RESPOND MSG="Homing X"
	    G28 X
	{% endif %}

    SAVE_GCODE_STATE NAME=park1
    G90
	SET_GCODE_OFFSET X=0 Y=0 #Z=0
    G1 X{printer.configfile.settings.dual_carriage.position_max} F12000
    RESTORE_GCODE_STATE NAME=park1
